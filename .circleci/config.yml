version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.7.2
  working_directory: /project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

fetch_data: &fetch_data
  run:
    name: Set script permissions and fetch data
    command: |
      source venv/bin/activate
      chmod +x ./scripts/fetch_kaggle_dataset.sh
      ./scripts/fetch_kaggle_dataset.sh

install_model_requirements: &install_model_requirements
    run:
      name: Install model requirements
      command: |
        . venv/bin/activate
        pip install -r packages/regression_model/requirements.txt

train_model: &train_model
    run:
      name: Train model
      command: |
        . venv/bin/activate
        PYTHONPATH=./packages/regression_model python3 packages/regression_model/regression_model/train_pipeline.py

jobs:
  test_regression_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - *install_model_requirements
      - *fetch_data
      - *train_model
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            py.test -vv packages/regression_model/tests
      - persist_to_workspace:
          # Keep the model object that has been built for future tests
          root: packages/regression_model/regression_model/trained_models
          # Must be relative path from root
          paths:
            - *.pkl

  test_ml_api:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /project/packages/regression_model/regression_model/trained_models
      - *prepare_venv
      - run:
          name: Runnning tests
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests -m "not differential"
      - save_cache:
          key: py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
          paths:
            - "/venv"

  train_and_upload_regression_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - *install_model_requirements
      - *fetch_data
      - *train_model      
      - run: 
          name: Publish model to Gemfury
          command: |
            . venv/bin/activate
            # AB note: Section 8.4 recommends using GemFury, but I decided not to. The following line is therefore commented out
            # chmod +x ./scripts/publish_model.sh
            # ./scripts/publish_model.sh ./packages/regression_model/

  section_9_differential_tests:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - *install_model_requirements
      - *fetch_data
      - *train_model
      - run:
          name: Capturing previous model predictions
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/diff_test_requirements.txt
            PYTHONPATH=./packages/ml_api python3 packages/ml_api/tests/capture_model_predictions.py
      - run:
          name: Runnning differential tests
          command: |
            . venv/bin/activate
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests -m differential

workflows:
  version: 2
  test-all:
    jobs:
      - test_regression_model
      - test_ml_api:
          requires:
            - test_regression_model
      - section_9_differential_tests
      - train_and_upload_regression_model:
          requires:
            - test_regression_model
            - test_ml_api
            - section_9_differential_tests
          # filters:
          #   branches:
          #     only:
          #       - master
